{
    "componentChunkName": "component---src-templates-lesson-template-js",
    "path": "/settimeout",
    "result": {"data":{"markdownRemark":{"html":"<p>The frontend is more where the interesting part of long-polling lives. At first let's do it with a simple setTimeout to get our response back.</p>\n<p>Open polling-chat.js in the frontend directory.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// replace getNewMessages</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getNewMsgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> json<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/poll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// back off code would go here</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"polling error\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  allChat <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>getNewMsgs<span class=\"token punctuation\">,</span> <span class=\"token constant\">INTERVAL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// just notice this is the last line of the doc</span>\n<span class=\"token function\">getNewMsgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This is what does the heavy lifting for us. This is what will hit that endpoint every 3 seconds (well, 3 seconds plus however long the request takes).</p>\n<p>Again, the temptation here would be to just use setInterval but this strategy is superior because it will make sure only one request is ever in flight. With setInterval, it will request every X seconds, no matter what. Let's knock out the post request too.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">postNewMsg</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user<span class=\"token punctuation\">,</span> text</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    user<span class=\"token punctuation\">,</span>\n    text<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// request options</span>\n  <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// send POST request</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/poll\"</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nothing too special here: just a normal ol' post request.</p>\n<p>Now your app should be working for long polling! This is the simplest way to acheive realtime: just make a lot of requests! Let's take this a step further and try to make it a bit better.</p>\n<blockquote>\n<p>The current state of the repo can be found in the <a href=\"https://github.com/btholt/realtime-exercises/tree/main/polling/no-pause\">no-pause</a> directory on the project.</p>\n</blockquote>","frontmatter":{"path":"/settimeout","title":"Polling with setTimeout","order":"2C","section":"Polling"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"2E","path":"/backoff-and-retry","title":"Backoff and Retry"}}},{"node":{"frontmatter":{"order":"3B","path":"/chat-with-http2-push","title":"Chat with HTTP2 Push"}}},{"node":{"frontmatter":{"order":"5B","path":"/chat-with-socketio","title":"Chat with Socket.IO"}}},{"node":{"frontmatter":{"order":"6A","path":"/conclusion","title":"Conclusion"}}},{"node":{"frontmatter":{"order":"3A","path":"/intro-to-http2-push","title":"Intro to HTTP2 Push"}}},{"node":{"frontmatter":{"order":"5A","path":"/socketio","title":"Intro to Socket.IO"}}},{"node":{"frontmatter":{"order":"4A","path":"/intro-to-websockets","title":"Intro to WebSockets"}}},{"node":{"frontmatter":{"order":"1A","path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":"2B","path":"/polling-backend","title":"Polling Backend"}}},{"node":{"frontmatter":{"order":"2C","path":"/settimeout","title":"Polling with setTimeout"}}},{"node":{"frontmatter":{"order":"2A","path":"/polling","title":"Intro to Long-Polling"}}},{"node":{"frontmatter":{"order":"2D","path":"/requestanimationframe","title":"Polling with requestAnimationFrame"}}},{"node":{"frontmatter":{"order":"1B","path":"/the-project","title":"The Project"}}},{"node":{"frontmatter":{"order":"4B","path":"/websockets-backend","title":"WebSockets Backend"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["137611351"]}