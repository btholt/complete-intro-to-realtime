{
    "componentChunkName": "component---src-templates-lesson-template-js",
    "path": "/polling",
    "result": {"data":{"markdownRemark":{"html":"<p>We are going to write a chat app where anyone can connect to a URL and begin chatting about anything. How would you go about architecting how to build this sort of app?</p>\n<p>Let's think about the product requirements.</p>\n<ol>\n<li>A user needs to be able to post new messages</li>\n<li>A user needs to be able to see old messages from the chat when they first connect</li>\n<li>A user needs to be able to see their own messages</li>\n<li>A user needs to be able to see new messages posted by other people</li>\n</ol>\n<p>As you may imagine, there are many ways to architect this system and some work better in some ways and worse in others. In other words, there are trade-offs. We're going to start with perhaps the simplest approach to this problem: the humble long-poll.</p>\n<h2 id=\"long-polling\" style=\"position:relative;\"><a href=\"#long-polling\" aria-label=\"long polling permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Long Polling</h2>\n<p>Long polling (to which I'll refer as just polling from here on out) is really a way of saying \"making a lot of requests.\" There's no special technology here, it's just making an AJAX call on some interval.</p>\n<p>What are some of the keys here?</p>\n<p>The polling end point is going to get called a lot, so make sure it's designed that way. If you have a 100 clients making requests every 3 seconds, that that's 2,000 requests a minute, and it just scales from there. Try to make it as fast as possible and offload all other actions to be done outside of the hot path.</p>\n<p>Don't just use <code class=\"language-text\">setInterval</code> as tempting as that sounds. setInterval sets some function to be set off every X seconds and doesn't account for the fact that a request takes time. What if you're making a request every 3 seconds but your API takes 4 seconds to respond? Now you're making requests while others are still in flight. Instead, what you want to do is start a timer for the next request as soon as the current one completes. <code class=\"language-text\">setTimeout</code> at the end of your function with the next time for the next request is one way to do this.</p>","frontmatter":{"path":"/polling","title":"Intro to Long-Polling","order":"2A","section":"Polling"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"2E","path":"/backoff-and-retry","title":"Backoff and Retry"}}},{"node":{"frontmatter":{"order":"3B","path":"/chat-with-http2-push","title":"Chat with HTTP2 Push"}}},{"node":{"frontmatter":{"order":"5B","path":"/chat-with-socketio","title":"Chat with Socket.IO"}}},{"node":{"frontmatter":{"order":"6A","path":"/conclusion","title":"Conclusion"}}},{"node":{"frontmatter":{"order":"3A","path":"/intro-to-http2-push","title":"Intro to HTTP2 Push"}}},{"node":{"frontmatter":{"order":"5A","path":"/socketio","title":"Intro to Socket.IO"}}},{"node":{"frontmatter":{"order":"4A","path":"/intro-to-websockets","title":"Intro to WebSockets"}}},{"node":{"frontmatter":{"order":"1A","path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":"2B","path":"/polling-backend","title":"Polling Backend"}}},{"node":{"frontmatter":{"order":"2C","path":"/settimeout","title":"Polling with setTimeout"}}},{"node":{"frontmatter":{"order":"2A","path":"/polling","title":"Intro to Long-Polling"}}},{"node":{"frontmatter":{"order":"2D","path":"/requestanimationframe","title":"Polling with requestAnimationFrame"}}},{"node":{"frontmatter":{"order":"1B","path":"/the-project","title":"The Project"}}},{"node":{"frontmatter":{"order":"4B","path":"/websockets-backend","title":"WebSockets Backend"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["137611351"]}